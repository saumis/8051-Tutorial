C51 COMPILER V7.06   KAYANYAZý                                                             06/17/2005 11:21:26 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE KAYANYAZý
OBJECT MODULE PLACED IN KayanYazý.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE KayanYazý.c LARGE BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /************************************************************************/
   2          /* Uygulama Adi :       5x7 Matris LED Kullanarak Kayan Yazi Uygulamasi        */
   3          /* Dosya Adý    :       Kayan_Yazi                                     */
   4          /* Tarih                :       Mayis 2005                                                     */
   5          /* Hedef Ýþlemci  :     MCS-51                                                 */
   6          /*                                                                                             */
   7          /************************************************************************/
   8          /* Kütüphane Dosyasi */
   9          #pragma large           // Bütün deðiþken ve sabitleri büyük boyutlu kýlar.
  10          #include <89c51rd2.H>
  11          
  12          
  13          
  14          #define satirtarama     P1      // Satýrlarý Tarar.
  15          
  16          // Tus Takimi Sütun Tanimlamalari
  17          #define Sutun1          P2_0
  18          #define Sutun2          P2_1
  19          #define Sutun3          P2_2
  20          
  21          // Tus Takimi Satir Tanimlamalari
  22          #define SatA            P2_3
  23          #define SatB            P2_4
  24          #define SatC            P2_5
  25          #define SatD            P2_6
  26          
  27          /* Kaymali Kaydedici Uc Tanimlamalari */
  28          #define reset           P3_0    // Shift Register'i Resetler.
  29          #define clock           P3_1    // Shift Register'a (Clock)saat Palsi Gönderir.
  30          #define datas           P3_2    // Shift Register'a Data'yý Gönderir.
  31          
  32          #define sil             P3_3    // Yazýlacak Verileri Siler.
  33          #define rst             P3_4    // Ýþlemciyi resetler.
  34           
  35          // Deðiþkenlerin ilk deðerleriyle birlikte tanýmlamasý.
  36           int    enter=1,
  37                  dizidekikarakter=0,
  38                  tus=0,
  39                  tekrar[10]={0,0,0,0,0,0,0,0,0,0},               
  40                  sifirmi=0,
  41                  bak=0,
  42                  sifirla=0,
  43                  satirelemani=0,
  44                  yazilacakdizi[20][6],
  45                  krkt=0,
  46                  kar=0,
  47                  esasyaz[240],
  48                  yazmayitekraret=0,
  49                  satirsay=0,
  50                  satelm=0,
  51                  gecsatirtarama=0x01,
  52                  bekle=0,
  53                  karaktersayisi=29;
  54           code unsigned int
  55           karakterler[50][6]={{0x00,0x00,0x00,0x00,0x00,0x00},    //  Bosluk
C51 COMPILER V7.06   KAYANYAZý                                                             06/17/2005 11:21:26 PAGE 2   

  56                               {0x00,0x00,0x60,0x60,0x00,0x00},    //  .
  57                                                   {0x00,0x00,0x58,0x38,0x00,0x00},    //  ,
  58                                                   {0x00,0x00,0x66,0x66,0x00,0x00},    //  :
  59                                                   {0x00,0x3E,0x51,0x49,0x45,0x3E},    //  0
  60                                                   
  61                                                   {0x00,0x00,0x42,0x7F,0x40,0x00},    //  1
  62                                                   {0x00,0x08,0x08,0x3E,0x08,0x08},    //  +
  63                               {0x00,0x00,0x08,0x08,0x08,0x00},    //  -
  64                               {0x00,0x22,0x14,0x7F,0x14,0x22},    //  *
  65                               {0x00,0x20,0x10,0x08,0x04,0x02},    //  /
  66          
  67                               {0x00,0x42,0x61,0x51,0x49,0x46},    //  2
  68                               {0x00,0x7E,0x09,0x09,0x09,0x7E},    //  A
  69                               {0x00,0x7F,0x49,0x49,0x49,0x36},    //  B
  70                               {0x00,0x3E,0x41,0x41,0x41,0x22},    //  C
  71                               {0x00,0x1E,0x21,0x61,0x21,0x12},    //  Ç
  72          
  73                               {0x00,0x22,0x49,0x49,0x49,0x36},    //  3
  74                               {0x00,0x7F,0x41,0x41,0x41,0x3E},    //  D
  75                               {0x00,0x7F,0x49,0x49,0x49,0x41},    //  E
  76                               {0x00,0x7F,0x09,0x09,0x09,0x01},    //  F
  77                               {0x00,0x3E,0x41,0x49,0x49,0x7A},    //  G
  78          
  79                               {0x00,0x0F,0x08,0x08,0x08,0x7F},    //  4
  80                               {0x00,0x3C,0x43,0x53,0x53,0x74},    //  Ð
  81                               {0x00,0x7F,0x08,0x08,0x08,0x7F},    //  H
  82                               {0x00,0x00,0x41,0x7F,0x41,0x00},    //  I
  83                               {0x00,0x00,0x42,0x7F,0x42,0x00},    //  Ý
  84          
  85                               {0x00,0x4F,0x49,0x49,0x49,0x31},    //  5
  86                               {0x00,0x20,0x40,0x40,0x40,0x3F},    //  J
  87                               {0x00,0x7F,0x08,0x14,0x22,0x41},    //  K
  88                               {0x00,0x7F,0x40,0x40,0x40,0x40},    //  L
  89                               {0x00,0x7F,0x02,0x04,0x02,0x7F},    //  M
  90          
  91                               {0x00,0x3E,0x49,0x49,0x49,0x32},    //  6
  92                               {0x00,0x7F,0x02,0x04,0x08,0x7F},    //  N
  93                               {0x00,0x3E,0x41,0x41,0x41,0x3E},    //  O
  94                               {0x00,0x3C,0x43,0x42,0x43,0x3C},    //  Ö
  95                               {0x00,0x7F,0x09,0x09,0x09,0x06},    //  P
  96          
  97                               {0x00,0x01,0x71,0x09,0x05,0x03},    //  7
  98                               {0x00,0x3E,0x41,0x51,0x61,0x7E},    //  Q
  99                               {0x00,0x7F,0x09,0x19,0x29,0x46},    //  R                   
 100                                                   {0x00,0x26,0x49,0x49,0x49,0x32},    //  S
 101                               {0x00,0x02,0x15,0x55,0x15,0x08},    //  Þ
 102          
 103                               {0x00,0x36,0x49,0x49,0x49,0x36},    //  8
 104                               {0x00,0x01,0x01,0x7F,0x01,0x01},    //  T
 105                               {0x00,0x3F,0x40,0x40,0x40,0x3F},    //  U
 106                               {0x00,0x3C,0x41,0x40,0x41,0x3C},    //  Ü
 107                               {0x00,0x1F,0x20,0x40,0x20,0x1F},    //  V
 108          
 109                               {0x00,0x06,0x49,0x49,0x49,0x3E},    //  9
 110                               {0x00,0x3F,0x40,0x30,0x40,0x3F},    //  W
 111                               {0x00,0x63,0x14,0x08,0x14,0x63},    //  X
 112                               {0x00,0x03,0x04,0x78,0x04,0x03},    //  Y
 113                               {0x00,0x61,0x51,0x49,0x45,0x43}};   //  Z
 114          
 115          
 116          // Tanýmlamalar
 117          
C51 COMPILER V7.06   KAYANYAZý                                                             06/17/2005 11:21:26 PAGE 3   

 118          tusoku() large // Metin Giriþi (Tuþlarý Okur.)
 119          {
 120   1       SatA=0;            // satir-a'nýn taranýr.
 121   1       while(!SatA)
 122   1          {// Tus 1
 123   2           if (Sutun1==0) {tus=1; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun1){;}}
 124   2          // Tus 2
 125   2           if (Sutun2==0) {tus=2; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun2){;}}
 126   2          // Tus 3
 127   2           if (Sutun3==0) {tus=3; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun3){;}}
 128   2           SatA=1;
 129   2          }
 130   1       SatB=0;            // satir-b taranýr.
 131   1       while(!SatB)
 132   1          {// Tus 4
 133   2           if (Sutun1==0) {tus=4; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun1){;}}
 134   2          // Tus 5
 135   2           if (Sutun2==0) {tus=5; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun2){;}}
 136   2          // Tus 6
 137   2           if (Sutun3==0) {tus=6; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun3){;}}
 138   2           SatB=1;
 139   2          }
 140   1       SatC=0;            // satir-c taranýr.
 141   1       while(!SatC)
 142   1          {// Tus 7
 143   2           if (Sutun1==0) {tus=7; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun1){;}}
 144   2          // Tus 8
 145   2           if (Sutun2==0) {tus=8; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun2){;}}
 146   2          // Tus 9
 147   2           if (Sutun3==0) {tus=9; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun3){;}}
 148   2           SatC=1;
 149   2          }
 150   1       SatD=0;            // satir-d taranýr.
 151   1       while(!SatD)
 152   1          {// * Tuþu
 153   2           if (Sutun1==0) {
 154   3                           dizidekikarakter++;// Bir sonraki karaktere geçer.
 155   3                           tus=0;                             // Tuþ bilgisi sýfýrlanýr.
 156   3                           while(!Sutun1){;}
 157   3                           for(sifirla=0;sifirla<10;sifirla++)
 158   3                              tekrar[sifirla]=0;  //"tekrar" dizisi sýfýrlanýr.
 159   3                          }                       
 160   2          // Tus 0
 161   2           if (Sutun2==0) {tus=0; tekrar[tus]++; tekrar[tus]=tekrar[tus]%5; while(!Sutun2){;}}
 162   2          // Yazý okumayý bitirir.
 163   2           if (Sutun3==0) {enter=0;while(!Sutun3){;}}
 164   2           SatD=1;
 165   2          }
 166   1      }
 167          
 168          
 169          yazial() large // Karakteri "yazilacakdizi" dizisine ekler.
 170          {
 171   1       for (satirelemani=0;satirelemani<6;satirelemani++)
 172   1           yazilacakdizi[  dizidekikarakter   ][satirelemani]
 173   1          =karakterler  [ (tus*5)+tekrar[tus] ][satirelemani];
 174   1      }
 175          
 176          
 177          goster() large // Yazýlacak Karakteri Görüntüler.
 178          {// Harflerin görünebilmesi için yazmayý tekrar eder.
 179   1       for(yazmayitekraret=0;yazmayitekraret<2;yazmayitekraret++)
C51 COMPILER V7.06   KAYANYAZý                                                             06/17/2005 11:21:26 PAGE 4   

 180   1          for (satirsay=0;satirsay<7;satirsay++)  // Herbir satýrý tek tek yazmak için.
 181   1              {
 182   2               reset=0;   // Shift Register resetlenir.
 183   2               reset=1;
 184   2               // "yazilacakdizi" dizisindeki kaydýrýlacak yazýyý yazdirmak için.
 185   2               for(satelm=0;satelm<(dizidekikarakter+1)*6;satelm++)
 186   2                  {// "yazilacakdizi" dizisinden, yazýlacak satýr bilgisi seçilir.
 187   3                   datas=yazilacakdizi[krkt][satelm]&gecsatirtarama;
 188   3                   clock=0;   // Herbir Clock'ta hazýr olan sütun elemaný,
 189   3                   clock=1;   // Shift Register'da kayar.
 190   3                  }
 191   2               // gecsatirtarama deðiþkeni kaçýncý satýrýn aktif olacaðýný ifade eder.
 192   2               satirtarama=gecsatirtarama;
 193   2               // Herbir yazmada ledlerin yandýðýnýn görünmesi için gecikme.
 194   2               for(bekle=0;bekle<1;bekle++) {;}
 195   2               // Bir sonraki satýrýn bilgisi hazýrlanýrken görünmemesi için satýr silinir.
 196   2               satirtarama=0x00;
 197   2               gecsatirtarama=gecsatirtarama<<1;  // Bir sonraki satýra geçilir.
 198   2               // 7 Satýr tarandýktan sonra, taramayý baþa döndürür.
 199   2               if (gecsatirtarama==0x80) gecsatirtarama=0x01;
 200   2               if (sil==0)
 201   2                  {// En son alýnmýþ karakteri "yazilacakdizi" dizisinden siler.
 202   3                   while (!sil) {;}
 203   3                   for(kar=0;kar<6;kar++) yazilacakdizi[dizidekikarakter][kar]=0;
 204   3                               // "dizidekikarakter" dizisi 1 eksiltilir.
 205   3                   if (dizidekikarakter!=0) dizidekikarakter--;
 206   3                               tus=0;         // Tuþ bilgisi sýfýrlanýr.
 207   3                  }
 208   2              }
 209   1       satirtarama=0x00;      // Ekran her tarama sonunda temizlenir.
 210   1      }
 211          
 212          
 213          tekbdizi() large // "esasyaz" dizisine 10 karakterlik boþluk býrakacak þekilde
 214                           //"yazilacakdizi" dizisinden "esasyaz" dizisine karakterleri aktarýr.
 215          {
 216   1       for (krkt=9;krkt<karaktersayisi;krkt++)
 217   1          for (kar=0;kar<6;kar++)
 218   1              esasyaz[(krkt*6)+kar]=yazilacakdizi[krkt-9][kar];
 219   1       // "esasyaz" dizisinin kullanýlmamýþ yerlerine 0 atar.
 220   1       for (kar=(krkt*6)+kar;kar<240;kar++) esasyaz[kar]=0;
 221   1      }
 222          
 223          
 224          kaydir() large // Metni Yazar ve Kaydýrýr.
 225          {
 226   1       while (1)
 227   1          {
 228   2           for (krkt=0;krkt<60+(dizidekikarakter*6);krkt++)
 229   2              // Harflerin görünebilmesi için yazmayý tekrar eder.
 230   2              for(yazmayitekraret=0;yazmayitekraret<10;yazmayitekraret++)
 231   2                  for (satirsay=0;satirsay<7;satirsay++)  // Herbir satýrý tek tek yazmak için.
 232   2                      {// Shift Register resetlenir.
 233   3                       reset=0;
 234   3                       reset=1;
 235   3                       // esasyaz dizisindeki 60 sütun elemanýný yazdirmak için.
 236   3                       for(satelm=0;satelm<60;satelm++)
 237   3                          {// esasyaz dizisinden, yazýlacak satýr bilgisi seçilir.
 238   4                           datas=esasyaz[krkt+satelm]&gecsatirtarama;
 239   4                           clock=0;   // Herbir Clock'ta hazýr olan sütun elemaný,
 240   4                           clock=1;   // Shift Register'da kayar.
 241   4                          }
C51 COMPILER V7.06   KAYANYAZý                                                             06/17/2005 11:21:26 PAGE 5   

 242   3                       // gecsatirtarama deðiþkeni kaçýncý satýrýn aktif olacaðýný ifade eder.
 243   3                       satirtarama=gecsatirtarama;
 244   3                       // Herbir yazmada ledlerin yandýðýnýn görünmesi için gecikme.
 245   3                       for(bekle=0;bekle<1;bekle++) {;}
 246   3                       // Bir sonraki satýrýn bilgisi hazýrlanýrken görünmemesi için satýr silinir.
 247   3                       satirtarama=0x00;
 248   3                       gecsatirtarama=gecsatirtarama<<1;  // Bir sonraki satýra geçilir.
 249   3                       // 7 Satýr tarandýktan sonra, taramayý baþa döndürür.
 250   3                       if (gecsatirtarama==0x80) gecsatirtarama=0x01;
 251   3                       if (sil==0)
 252   3                          {// Diziler Silinir.
 253   4                           while (!sil) {;}
 254   4                           for(sifirla=0;sifirla<10;sifirla++) tekrar[sifirla]=0;             
 255   4                           for(sifirla=0;sifirla<20;sifirla++)
 256   4                              for(kar=0;kar<6;kar++) yazilacakdizi[sifirla][kar]=0;
 257   4                           for(sifirla=0;sifirla<192;sifirla++) esasyaz[sifirla]=0;
 258   4                           rst=0; //Program Resetlenir.
 259   4                           rst=1;
 260   4                          }
 261   3                      }
 262   2          }
 263   1      }
 264          
 265          
 266          main() large //Ana Foksiyon
 267          { 
 268   1       rst=1;
 269   1       while(enter)
 270   1          {
 271   2           if (dizidekikarakter==20) break;
 272   2           tusoku();
 273   2           yazial();
 274   2           goster();
 275   2          }
 276   1       tekbdizi();
 277   1       kaydir();
 278   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2400    ----
   CONSTANT SIZE    =    600    ----
   XDATA SIZE       =    770    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
